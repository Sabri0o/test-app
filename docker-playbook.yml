- hosts: all
  become: true
  tasks:

    - name: Install aptitude
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required dependencies
      apt: name={{item}} state=latest update_cache=yes
      loop:
        [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "software-properties-common",
          "python3-pip",
          "virtualenv",
          "python3-setuptools",
        ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install Docker CE
      apt: update_cache=yes name=docker-ce state=latest
    - name: Install Docker Module for Python
      pip:
        name: docker
    
    - name: Create network
      docker_network:
        name: test-app-net

    - name: run Postgres container
      docker_container:
        name: postgres
        state: started
        restart_policy: always
        image: postgres
        pull: false
        detach: yes
        ports:
          - "5432:5432"
        volumes: 
          - test-app-db:/var/lib/postgresql/data
        env:
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: database
            POSTGRES_USER: user
        networks:
          - name: test-app-net


    - name: run Server container
      docker_container:
        name: Server
        state: started
        image: "sabri0o/test-app_server:latest"
        pull: true
        ports:
          - "5000:5000"
        env:
            HOST: postgres
            USER: user
            PASSWORD: secret
            DB: database
        networks:
          - name: test-app-net

    - name: run Client container
      docker_container:
        name: Client
        state: started
        image: "sabri0o/test-app_client:latest"
        pull: true
        ports:
          - "8080:8080"
        env:
            EXPRESS_HOST: server
        networks:
          - name: test-app-net
    
    - name: Start Docker service
      service:
        name: "docker"
        state: started

